<?xml version="1.0" encoding="UTF-8"?>
<included>
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
	
		<!-- except monitoring log -->
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter" >      
	      <evaluator class="ch.qos.logback.classic.boolex.GEventEvaluator"> 
	        <expression>
	        	e.MDCPropertyMap.get("serverIP") == null &amp;&amp; 
	        	!e.threadName.contains("clientInboundChannel") &amp;&amp; 
	        	!e.loggerName.contains("WsFrameServer") &amp;&amp; 
	        	!e.loggerName.contains("MonChannelInterceptor")
	        </expression>
	      </evaluator>
	      <OnMatch>NEUTRAL</OnMatch>
	      <OnMismatch>DENY</OnMismatch>
	    </filter>
	    
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d [%thread] %-5level %-35logger{30} - %msg%n</pattern>
		</encoder>
	</appender>
	<appender name="PROVI_LOG" class="ch.qos.logback.classic.sift.SiftingAppender">
	    <discriminator>
	      <key>jobPath</key>
	      <defaultValue>unknown</defaultValue>
	    </discriminator>
	    <sift>
	      <appender name="FILE-${jobPath}" class="ch.qos.logback.core.FileAppender">
	        <file>${jobPath}/build.log</file>
	        <append>false</append>
	        <layout class="ch.qos.logback.classic.PatternLayout">
	          <pattern>%d [%thread] %X{serverIp} # %msg%n</pattern>
	        </layout>
	      </appender>
	    </sift>
	</appender>
	
	<appender name="MONITOR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${catalina.base}/logs/monitor.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<fileNamePattern>${catalina.base}/logs/monitor.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
				<!-- keep 30 days' worth of history -->
			    <maxHistory>30</maxHistory>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		
		<!-- filter monitoring log -->
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">      
	      <evaluator class="ch.qos.logback.classic.boolex.GEventEvaluator"> 
	        <expression>
	        	(e.MDCPropertyMap.get("serverIP") != null || 
	        	e.threadName.contains("clientInboundChannel") ||
	        	e.loggerName.contains("WsFrameServer") || 
	        	e.loggerName.contains("MonChannelInterceptor")) &amp;&amp; 
	        	e.level.toInt() >= INFO.toInt()
	        </expression>
	      </evaluator>
	      <OnMatch>ACCEPT</OnMatch>
	      <OnMismatch>DENY</OnMismatch>
	    </filter>

		<encoder>
			<pattern>%d @%X{serverIP}@ @TI_%X{tInstanceId}@ [%thread] %-5level %-35logger{30} - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 
	<appender name="ALL_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>/home/meerkat/apps/meerkat/logs/all.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

			<fileNamePattern>/home/meerkat/apps/meerkat/logs/all.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			    <maxHistory>30</maxHistory>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		
		<encoder>
			<pattern>%d @%X{serverIP}@ @TI_%X{tInstanceId}@ [%thread] %-5level %-35logger{30} - %msg%n</pattern>
		</encoder>
	</appender>
	 -->
	<logger name="com.athena" level="DEBUG"/>
	<logger name="com.athena.meerkat.controller.web.provisioning" level="DEBUG">
		<appender-ref ref="PROVI_LOG" />
	</logger>
	<logger name="com.athena.meerkat.controller.web.monitoring" level="DEBUG">
		
	</logger>

	<logger name="org.springframework" level="ERROR"/>
	<logger name="org.springframework.web" level="DEBUG"/>
	<logger name="org.springframework.web.websocket" level="DEBUG"/>
	<logger name="org.springframework.web.context.support.StandardServletEnvironment" level="INFO"/>
	<logger name="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" level="INFO"/>
	<logger name="org.springframework.security" level="DEBUG"/>
	<logger name="org.springframework.messaging" level="DEBUG"/> <!-- for stomp -->

	<logger name="org.hibernate" level="ERROR" />
	<logger name="org.hibernate.SQL" level="DEBUG" /> <!-- sql log -->
	<logger name="org.hibernate.type" level="DEBUG" /> <!-- on off sql parameters & result -->
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG" /> <!-- sql result (TRACE) -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" /> <!-- sql parameter (TRACE) -->
    <logger name="org.hibernate.type.BasicTypeRegistry" level="DEBUG" />
	<logger name="org.hibernate.engine.transaction" level="DEBUG" />
	<logger name="org.hibernate.internal.util.EntityPrinter" level="DEBUG" />
	
	<logger name="org.apache.tomcat.jdbc.pool" level="DEBUG" />
	<logger name="org.apache.tomcat.websocket" level="DEBUG" />

	<!-- 
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
	<logger name="java.sql.ResultSet" level="DEBUG" />
	 -->
	

	<root level="ERROR">
	    <appender-ref ref="CONSOLE" />
	    <appender-ref ref="MONITOR_FILE" />
	    <!-- <appender-ref ref="ALL_LOG_FILE" /> -->
	</root>
</included>